
/*
	明滅
*/

	0xff 0x24 =sfr		// ポートB を出力
	0x0f 0x27 =sfr		// ポートC 下位４bit を出力
	0xfa 0x2a =sfr		// ポートD 上位４bit を出力
:init

	;count

	;scan [8]led

	0 0x25 =sfr

	// 中間光度
	count clk & 1 &
	{
		return
	} if

	scan ++ 7 & =scan
	1 scan << ~
	dup 0xf0 | 0x28 =sfr
	0xf0 & 0x2b =sfr

	scan led 0x25 =sfr
:intclk

	clk +
	{
		clk == break
	} do .
:wait

	init
	0 =scan
	0 =count

	{ intclk 0 } interrupt

	{
		count
		{
			8 0 { 0xff over =led ++ } for ..
		}
		{
			8 0 { 0 over =led ++ } for ..
		} ifelse
		count 1 & { 150 } { 400 } ifelse wait

		@c? break

		count ++ 3 & =count
	} do
	@c .
:main

