
/*
	Message display with elisa-font
	(alphabet only)
*/

	"The quick brown fox jumps over the lazy dog"
:message


	0xff 0x24 =sfr
	0x0f 0x27 =sfr
	0xfa 0x2a =sfr
:init

	;scan [8]led
	;offset

	"\x18\x24\x42\x42\x7E\x42\x42\x00\x7C\x42\x42\x7C\x42\x42\x7C\x00\x1C\x22\x40\x40\x40\x22\x1C\x00\x78\x24\x22\x22\x22\x24\x78\x00\x7E\x40\x40\x7C\x40\x40\x7E\x00\x7E\x40\x40\x7C\x40\x40\x40\x00\x1C\x22\x40\x47\x42\x26\x1A\x00\x42\x42\x42\x7E\x42\x42\x42\x00\x1C\x08\x08\x08\x08\x08\x1C\x00\x0E\x04\x04\x04\x44\x44\x38\x00\x42\x44\x48\x50\x68\x44\x42\x00\x40\x40\x40\x40\x40\x40\x7E\x00\x41\x63\x55\x49\x41\x41\x41\x00\x42\x62\x52\x4A\x46\x42\x42\x00\x18\x24\x42\x42\x42\x24\x18\x00\x7C\x42\x42\x7C\x40\x40\x40\x00\x18\x24\x42\x42\x4A\x24\x1A\x00\x7C\x42\x42\x7C\x48\x44\x42\x00\x3C\x42\x40\x3C\x02\x42\x3C\x00\x7F\x08\x08\x08\x08\x08\x08\x00\x42\x42\x42\x42\x42\x42\x3C\x00\x41\x41\x22\x22\x14\x14\x08\x00\x41\x49\x49\x55\x55\x22\x22\x00\x41\x22\x14\x08\x14\x22\x41\x00\x41\x22\x14\x08\x08\x08\x08\x00\x7E\x02\x04\x08\x10\x20\x7E\x00"
:upper
	"\x00\x00\x1C\x02\x1E\x22\x1E\x00\x20\x20\x20\x3C\x22\x22\x3C\x00\x00\x00\x1C\x22\x20\x22\x1C\x00\x02\x02\x02\x1E\x22\x22\x1E\x00\x00\x00\x1C\x22\x3E\x20\x1E\x00\x0C\x12\x10\x3C\x10\x10\x10\x00\x00\x00\x1C\x22\x22\x1E\x02\x3C\x20\x20\x3C\x22\x22\x22\x22\x00\x08\x00\x18\x08\x08\x08\x1C\x00\x08\x00\x18\x08\x08\x08\x48\x30\x20\x20\x24\x28\x30\x28\x24\x00\x18\x08\x08\x08\x08\x08\x08\x00\x00\x00\x7E\x49\x49\x49\x49\x00\x00\x00\x3C\x22\x22\x22\x22\x00\x00\x00\x1C\x22\x22\x22\x1C\x00\x00\x00\x3C\x22\x22\x3C\x20\x20\x00\x00\x1E\x22\x22\x1E\x02\x02\x00\x00\x2E\x30\x20\x20\x20\x00\x00\x00\x1E\x20\x1C\x02\x3C\x00\x00\x10\x3C\x10\x10\x10\x0C\x00\x00\x00\x22\x22\x22\x22\x1E\x00\x00\x00\x22\x22\x14\x14\x08\x00\x00\x00\x22\x2A\x2A\x14\x14\x00\x00\x00\x22\x14\x08\x14\x22\x00\x00\x00\x22\x22\x22\x1E\x02\x3C\x00\x00\x3E\x04\x08\x10\x3E\x00"
:lower

	' ' ==
	{
		. return
	} if

	'a' >=
	{
		lower 'a'
	}
	{
		upper 'A'
	} ifelse - 
	3 << =offset
	8 0
	{
		7 over - offset + @s over led | over =led
		++
	} for ..
:alpha

	0 0x25 =sfr
	scan ++ 7 & =scan
	1 scan << ~
	dup 0xf0 | 0x28 =sfr
	0xf0 & 0x2b =sfr
	scan led 8 >> 0x25 =sfr

	;wait ;shift ;n

	wait
	{
		wait -- =wait
		return
	} if
	150 =wait
	8 0
	{
		dup led 1 << over =led
		++
	} for ..
	shift
	{
		shift --
	}
	{
		message n @s
		dup
		{
			alpha
			n ++
		}
		{
			. 0
		} ifelse =n
		8
	} ifelse =shift
:intclk

	init
	8 0 { 0 over =led ++ } for ..
	0
	dup =scan
	dup =wait
	dup =shift
	    =n

	{ intclk 0 } interrupt
	@c .
:main
